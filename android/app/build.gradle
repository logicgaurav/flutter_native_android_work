def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion flutter.compileSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.flutter_native_android_work"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    //lib for ExoPlayer
    implementation 'com.google.android.exoplayer:exoplayer-core:2.16.1'
    implementation 'com.google.android.exoplayer:exoplayer-dash:2.16.1'
    implementation 'com.google.android.exoplayer:exoplayer-hls:2.16.1'
    implementation 'com.google.android.exoplayer:exoplayer-smoothstreaming:2.16.1'
    implementation 'com.google.android.exoplayer:exoplayer-ui:2.16.1'
    //lib for ExoPlayer
    implementation 'com.google.android.exoplayer:exoplayer:2.16.1'
    implementation 'com.google.android.exoplayer:extension-ima:2.16.1'
    implementation 'com.google.android.exoplayer:extension-cast:2.16.1'
    implementation 'com.google.android.exoplayer:extension-okhttp:2.16.1'
    implementation 'com.google.android.exoplayer:extension-mediasession:2.16.1'

    implementation 'com.google.android.play:core:1.10.2'

    //Include the Taboola SDK binary
    implementation 'com.taboola:android-sdk:2.9.2'
    implementation 'com.google.android.gms:play-services-ads:20.5.0'
    implementation 'com.android.volley:volley:1.2.1'
//Taboola SDK requires the following dependency (mandatory)
    implementation 'com.android.support:customtabs:28.0.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    //To integrate PubMatic SDK
    implementation 'com.pubmatic.sdk:openwrap:2.3.0'
//To integrate DFP Event Handler
    implementation 'com.pubmatic.sdk:openwrap-eventhandler-dfp:2.5.0'

    //Youbora
    implementation "com.nicepeopleatwork:exoplayer-adapter:6.7.27"




}

apply from: "https://bitbucket.org/!api/2.0/snippets/npaw/yAk85G/files/exoplayer2-adapter-android-picker"